import React, { useState, useEffect, useRef } from 'react';
import Head from 'next/head';
import get from 'lodash.get';
import styles from '../styles/Home.module.css';
import accountTypeChecker from './api/accountTypeChecker';
import accountBalanceHistory from '../data/defaultAccountBalanceHistory';

export default function Home() {
  const title = 'Koodoo acc type checker';

  const [accData, setAccData] = useState(accountBalanceHistory);
  const [accType, setAccType] = useState(null);
  const [formAmount, setFormAmount] = useState(null);
  const prevMonthAmountInput = useRef(null);

  useEffect(() => {
    setAccData(accountBalanceHistory);
  }, []);

  useEffect(() => {
    setAccType(accountTypeChecker(accData));
  }, [accData]);

  const handleAddData = (e) => {
    e.preventDefault();

    const formData = {
      monthNumber: accData.length,
      account: {
        balance: { amount: formAmount },
      },
    };

    const newAccData = [
      formData,
      ...accData,
    ];

    setAccData(newAccData);
    prevMonthAmountInput.current.value = '';
    prevMonthAmountInput.current.focus();
  };

  const handleDataDelete = (e) => {
    e.target.disbled = true;
    const newAccData = [...accData];
    newAccData.shift();
    setAccData(newAccData);
    e.target.disbled = false;
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {title}
        </h1>

        <section className={styles.accountInfo}>
          <div className={styles.infoBlock}>
            <p>Previous month:</p>

            <form>
              <h3>
                {`Month ${accData.length}`}
              </h3>

              <label
                className={styles.label}
                htmlFor="amount"
              >
                End balance (Â£)

                <input
                  className={styles.input}
                  ref={prevMonthAmountInput}
                  type="number"
                  id="amount"
                  name="amount"
                  onChange={(e) => setFormAmount(e.target.value)}
                />
              </label>

              <input
                className={styles.button}
                type="submit"
                value="Add record"
                onClick={handleAddData}
              />
            </form>
          </div>

          <div className={styles.infoBlock}>
            <p>Acc type:</p>
            {
              accData.length > 2
                ? (<h3 className={styles.bft}>{accType}</h3>)
                : <b>Not enough data</b>
            }
          </div>
        </section>

        <div className={styles.grid}>
          { accData.map((data) => (
            <div
              key={data.monthNumber}
              className={styles.card}
            >
              { data.monthNumber === accData.length - 1 && (
                <button
                  className={styles.removeData}
                  onClick={handleDataDelete}
                  type="button"
                >
                  &#10005;
                </button>
              )}
              <h2>{`Month ${data.monthNumber}`}</h2>
              <p>{`Â£${get(data, 'account.balance.amount')}`}</p>
            </div>
          )) }
        </div>

        <p className={styles.json}>
          <code className={styles.code}>
            {JSON.stringify(accData)}
          </code>
        </p>
      </main>

      <footer className={styles.footer}>
        Koodoo Software Engineer Technical Assessment ðŸ‘¾, candidate: Alex Neil
      </footer>
    </div>
  );
}
